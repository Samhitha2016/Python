from collections import deque
#Definition of a Node 
class Node(object):
    def __init__(self, val, children):
        self.val=val
        self.children = children
        
class Solution(object):
    def levelorder(self, root):
        """
        type root: Node
        rtype: List[List[int]]
        """
        if root is None:
            return []
        result = []
        
        q = collections.deque([root])
        while len(q)!=0:
            tmp=[]
            newnode = len(q)
            for _ in range(newnode):
                node=q.popleft()
                for child in node.children:
                    q.append(child)
                tmp.append(node.val)
            result.append(tmp)
        return result
